<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>插件封装</title>
      <link href="/2019/10/11/jquery/%E6%8F%92%E4%BB%B6%E5%B0%81%E8%A3%85/"/>
      <url>/2019/10/11/jquery/%E6%8F%92%E4%BB%B6%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<ul><li>封装一个表格插件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#table1&#x27;</span>).<span class="title function_">table</span>([<span class="string">&quot;姓名&quot;</span>,<span class="string">&quot;年龄&quot;</span>,<span class="string">&quot;地址&quot;</span>,<span class="string">&#x27;手机&#x27;</span>],[</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">&quot;小王&quot;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">address</span>:<span class="string">&quot;上海&quot;</span>,<span class="attr">phone</span>:<span class="string">&quot;我是手机号&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">&quot;小红&quot;</span>,<span class="attr">age</span>:<span class="number">20</span>,<span class="attr">address</span>:<span class="string">&quot;北京&quot;</span>,<span class="attr">phone</span>:<span class="string">&quot;我是手机号&quot;</span>&#125;,</span><br><span class="line">])</span><br><span class="line"><span class="comment">//插件定义</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params">$</span>)&#123;</span><br><span class="line">    <span class="comment">//给jQuery的原型添加方法</span></span><br><span class="line">   $.fn.<span class="property">table</span>=<span class="keyword">function</span>(<span class="params">tableHeaders,tableBodys</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> list=[]</span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;table&gt;&quot;</span>)</span><br><span class="line">        <span class="comment">//生成表头</span></span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;thead&gt;&quot;</span>)</span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;tr&gt;&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;tableHeaders.<span class="property">length</span>;i++)&#123;</span><br><span class="line">list.<span class="title function_">push</span>(<span class="string">&quot;&lt;td&gt;&quot;</span>)</span><br><span class="line">            list.<span class="title function_">push</span>(tableHeaders[i])</span><br><span class="line">            list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/td&gt;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/tr&gt;&quot;</span>)</span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/thead&gt;&quot;</span>)</span><br><span class="line">        <span class="comment">//生成表格主题部分</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;tableBodys.<span class="property">length</span>;i++)&#123;</span><br><span class="line">list.<span class="title function_">push</span>(<span class="string">&quot;&lt;tr&gt;&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> tableBodys[i])&#123;</span><br><span class="line">                list.<span class="title function_">push</span>(<span class="string">&quot;&lt;td&gt;&quot;</span>)</span><br><span class="line">                list.<span class="title function_">push</span>(tableBodys[i][key])</span><br><span class="line">                list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/td&gt;&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/tr&gt;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/table&gt;&quot;</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">html</span>(list.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;(jQuery))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>插件</title>
      <link href="/2019/10/10/jquery/%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/10/10/jquery/%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>插件网址：</p><ul><li><a href="https://www.jq22.com/">https://www.jq22.com/</a></li><li><a href="https://jqueryui.com/">https://jqueryui.com/</a></li></ul><h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><ul><li>颜色插件</li><li>省级联动</li><li>jQueryUI<ul><li>常用的2-3个功能演示</li></ul></li></ul><h2 id="jQuery插件开发"><a href="#jQuery插件开发" class="headerlink" title="jQuery插件开发"></a>jQuery插件开发</h2><ul><li>给jQuery增加方法的两种方式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.method=fu     <span class="comment">//静态方法</span></span><br><span class="line">$.fn.<span class="property">method</span>=fn  <span class="comment">//实例方法</span></span><br></pre></td></tr></table></figure><ul><li>添加一个静态方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $.add=<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="插件封装"><a href="#插件封装" class="headerlink" title="插件封装"></a>插件封装</h3><ul><li>给jQuery原型添加方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插件定义</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params">$</span>)&#123;</span><br><span class="line">    <span class="comment">//给jQuery的原型添加方法</span></span><br><span class="line">   $.fn.<span class="property">bgColor</span>=<span class="keyword">function</span>(<span class="params">bgcolor</span>)&#123;</span><br><span class="line">        <span class="comment">//this是调用此方法的jQuery对象</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">css</span>(<span class="string">&quot;backgroundColor&quot;</span>,bgcolor)</span><br><span class="line">        <span class="comment">//返回调用此方法的jQuery本身</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;(jQuery))</span><br><span class="line"><span class="comment">//用法</span></span><br><span class="line">$(<span class="string">&quot;div&quot;</span>).<span class="title function_">width</span>(<span class="number">100</span>),<span class="title function_">height</span>(<span class="number">100</span>).<span class="title function_">bgColor</span>(<span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>直接给jQuery添加方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插件定义</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params">$</span>)&#123;</span><br><span class="line">    <span class="comment">//给jQuery的原型添加方法</span></span><br><span class="line">   $.bgColor=<span class="keyword">function</span>(<span class="params">bgcolor</span>)&#123;</span><br><span class="line">        <span class="comment">//this是调用此方法的jQuery对象</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">css</span>(<span class="string">&quot;backgroundColor&quot;</span>,bgcolor)</span><br><span class="line">        <span class="comment">//返回调用此方法的jQuery本身</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;(jQuery))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网络请求</title>
      <link href="/2019/10/10/jquery/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/"/>
      <url>/2019/10/10/jquery/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<ul><li>封装一个表格插件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#table1&#x27;</span>).<span class="title function_">table</span>([<span class="string">&quot;姓名&quot;</span>,<span class="string">&quot;年龄&quot;</span>,<span class="string">&quot;地址&quot;</span>,<span class="string">&#x27;手机&#x27;</span>],[</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">&quot;小王&quot;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">address</span>:<span class="string">&quot;上海&quot;</span>,<span class="attr">phone</span>:<span class="string">&quot;我是手机号&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">&quot;小红&quot;</span>,<span class="attr">age</span>:<span class="number">20</span>,<span class="attr">address</span>:<span class="string">&quot;北京&quot;</span>,<span class="attr">phone</span>:<span class="string">&quot;我是手机号&quot;</span>&#125;,</span><br><span class="line">])</span><br><span class="line"><span class="comment">//插件定义</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params">$</span>)&#123;</span><br><span class="line">    <span class="comment">//给jQuery的原型添加方法</span></span><br><span class="line">   $.fn.<span class="property">table</span>=<span class="keyword">function</span>(<span class="params">tableHeaders,tableBodys</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> list=[]</span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;table&gt;&quot;</span>)</span><br><span class="line">        <span class="comment">//生成表头</span></span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;thead&gt;&quot;</span>)</span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;tr&gt;&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;tableHeaders.<span class="property">length</span>;i++)&#123;</span><br><span class="line">list.<span class="title function_">push</span>(<span class="string">&quot;&lt;td&gt;&quot;</span>)</span><br><span class="line">            list.<span class="title function_">push</span>(tableHeaders[i])</span><br><span class="line">            list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/td&gt;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/tr&gt;&quot;</span>)</span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/thead&gt;&quot;</span>)</span><br><span class="line">        <span class="comment">//生成表格主题部分</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;tableBodys.<span class="property">length</span>;i++)&#123;</span><br><span class="line">list.<span class="title function_">push</span>(<span class="string">&quot;&lt;tr&gt;&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> tableBodys[i])&#123;</span><br><span class="line">                list.<span class="title function_">push</span>(<span class="string">&quot;&lt;td&gt;&quot;</span>)</span><br><span class="line">                list.<span class="title function_">push</span>(tableBodys[i][key])</span><br><span class="line">                list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/td&gt;&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/tr&gt;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        list.<span class="title function_">push</span>(<span class="string">&quot;&lt;/table&gt;&quot;</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">html</span>(list.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;(jQuery))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>事件机制</title>
      <link href="/2019/10/08/jquery/%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/"/>
      <url>/2019/10/08/jquery/%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<ul><li>JavaScript中已经学习过了事件,jQuery对JavaScript事件进行了封装，增加并扩展了事件处理机制。jQuery不仅提供了更加优雅的事件处理语法，而且极大的增强了事件的处理能力。</li></ul><h3 id="jQuery事件发展历程-了解"><a href="#jQuery事件发展历程-了解" class="headerlink" title="jQuery事件发展历程(了解)"></a>jQuery事件发展历程(了解)</h3><p>简单事件绑定–bind事件绑定–delegate事件绑定–on事件绑定(推荐)</p><ul><li>简单事件注册</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">click</span>(handler)        <span class="comment">//单击事件</span></span><br><span class="line"><span class="title function_">mouseenter</span>(handler)   <span class="comment">//鼠标进入事件</span></span><br><span class="line">mouseleave*(hander)   <span class="comment">//鼠标离开事件</span></span><br></pre></td></tr></table></figure><p>缺点：不能同时注册多个事件，也不支持动态注册</p><ul><li>bind方式注册</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一个参数：事件类型</span></span><br><span class="line"><span class="comment">//第二个参数：事件处理程序</span></span><br><span class="line"><span class="comment">//写法一：</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">bind</span>(<span class="string">&quot;click mouseenter&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//事件响应</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//方法二</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">bind</span>(<span class="string">&quot;click mouseenter&quot;</span>,&#123;</span><br><span class="line">    <span class="attr">click</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">    <span class="attr">mouseenter</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>delegate注册委托</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//参数1：selector,要绑定事件的元素</span></span><br><span class="line"><span class="comment">//参数2：事件类型</span></span><br><span class="line"><span class="comment">//参数3：事件处理函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//写法1</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">delegate</span>(<span class="string">&quot;P&quot;</span>,<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//给#div1下所有的p标签绑定事件  </span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//写法2</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">delegate</span>(<span class="string">&quot;P&quot;</span>,&#123;</span><br><span class="line">    <span class="attr">mouseenter</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">    <span class="attr">click</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><p>on注册事件（重要）</p><ul><li>jQuery1.7之后，jQuery用on统一了所有事件的处理方法</li><li>最现代的方式，兼容zepto(移动端类似jQuery的一个库)，强烈建议使用</li></ul><p>on注册简单事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//给$(selector)绑定事件，并由自己触发，不支持动态绑定</span></span><br><span class="line">$(selector).<span class="title function_">on</span>(<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;)</span><br></pre></td></tr></table></figure><p>on委托注册</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//表示给$(selector)绑定代理事件，当必须是它内部元素span才能触发，支持动态加载</span></span><br><span class="line">$(selector).<span class="title function_">on</span>(<span class="string">&quot;click&quot;</span>,<span class="string">&quot;span,div&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="事件解绑"><a href="#事件解绑" class="headerlink" title="事件解绑"></a>事件解绑</h3><ul><li>unbind(不用)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$obj.<span class="title function_">unbind</span>()<span class="comment">//解除所有事件</span></span><br><span class="line">$obj.<span class="title function_">unbind</span>(<span class="string">&quot;click&quot;</span>)<span class="comment">//解除指定事件</span></span><br></pre></td></tr></table></figure><ul><li>undelegate(不用)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$obj.<span class="title function_">undelegate</span>()<span class="comment">//解除所有delegate事件</span></span><br><span class="line">$obj.<span class="title function_">undelegate</span>(<span class="string">&quot;click&quot;</span>)<span class="comment">//解除所有click事件</span></span><br></pre></td></tr></table></figure><ul><li>off(推荐)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$obj.<span class="title function_">off</span>()<span class="comment">//解除元素的所有事件</span></span><br><span class="line">$obj.<span class="title function_">off</span>(<span class="string">&quot;click&quot;</span>)<span class="comment">//解除元素的click事件</span></span><br></pre></td></tr></table></figure><h3 id="事件触发"><a href="#事件触发" class="headerlink" title="事件触发"></a>事件触发</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$obj.<span class="title function_">click</span>()<span class="comment">//触发click事件</span></span><br><span class="line">$obj.<span class="title function_">trigger</span>(<span class="string">&quot;click&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="jQuery的事件对象"><a href="#jQuery的事件对象" class="headerlink" title="jQuery的事件对象"></a>jQuery的事件对象</h3><ul><li>jQuery事件对象其实就是js事件对象的一个封装，处理了兼容性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// screenX和screenY 对应屏幕最左上角的值</span></span><br><span class="line"><span class="comment">// clientX和clientY 距离页面左上角的位置( 忽视滚动条)</span></span><br><span class="line"><span class="comment">// pageX和pageY距离页面最顶部的左上角的位置( 会计算滚动条的距离)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// event.stopPropagation() 阻止事件冒泡行为</span></span><br><span class="line"><span class="comment">// event.preventDefault()  阻止浏览器默认行为</span></span><br><span class="line"><span class="comment">// return false:既能阳止事件冒泡，又能阻止浏览器默认行为</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// event.keyCode 按下的键盘代码</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>知识点补充</title>
      <link href="/2019/10/08/jquery/%E7%9F%A5%E8%AF%86%E7%82%B9%E8%A1%A5%E5%85%85/"/>
      <url>/2019/10/08/jquery/%E7%9F%A5%E8%AF%86%E7%82%B9%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<pre><code>## jQuery知识点补充    ###     链式编程* 通常情况下，只有设置操作才能把链式编程延续下去。因为获取操作的时候，会返回获取到的相应的值，无法返回jQuery对象  什么时候可以链式编程  * 如果调用一个方法，这个方法有返回值，并且这个返回值是一个jQuery对象，那就可以继续使用jQuery方法  * 必须是jQuery对象才能点出jQuery方法  * 有的时候方法返回的是一个jQuery对象，但是这个对象不是我们用的对象，就不要继续链式编程<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">end</span>()<span class="comment">// 筛选选择器会改变Query对象的DOM对象，想要复到上一次的状态，并且返回匹配元素之前的状态。</span></span><br><span class="line"><span class="comment">//回到上一个状态</span></span><br><span class="line"><span class="comment">//end()也是一个jQuery方法他也需要jQuery对象点出来</span></span><br></pre></td></tr></table></figure>###     each()方法* jQuery的隐式迭代会对所有的DOM对象设置相同的值，但是如果我们需要给每一个对象设置不同的值的时候，就需要自己进行迭代了作用:遍历jQuery对象集合，为每个匹配的元素执行一个函数<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数一表示当前元素在所有匹配元素中的索引号</span></span><br><span class="line"><span class="comment">// 参数二表示当前元素( DOM对象)</span></span><br><span class="line">$obj.<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">index,element</span>)&#123;&#125;);</span><br></pre></td></tr></table></figure>###     多库共存* jQuery使用作为标示符，但是如果与其他框架中的冲突时，jQuery可以释放$符的控制权<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c=$.<span class="title function_">noConflict</span>()<span class="comment">//释放$控制权,并把$给c</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看jQuery版本</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jQuery.<span class="property">fn</span>.<span class="property">jquery</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jQuery.<span class="property">prototye</span>.<span class="property">jquery</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>($.fn.<span class="property">jquery</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>($.prototye.<span class="property">jquery</span>)</span><br></pre></td></tr></table></figure></code></pre>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>属性操作</title>
      <link href="/2019/10/06/jquery/%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/10/06/jquery/%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="jQuery属性操作"><a href="#jQuery属性操作" class="headerlink" title="jQuery属性操作"></a>jQuery属性操作</h2><ul><li><p>attr()</p><ul><li>设置单属性<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;img&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;路径&quot;</span>)<span class="comment">//如果存在src就更换 </span></span><br><span class="line">$(<span class="string">&quot;img&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;我是自定义属性&quot;</span>)<span class="comment">//修改自定义属性</span></span><br><span class="line"><span class="comment">//如果元素没有这个属性就添加这个属性</span></span><br></pre></td></tr></table></figure></li><li>设置多属性<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;img&quot;</span>).<span class="title function_">attr</span>(&#123;</span><br><span class="line">    <span class="attr">src</span>:<span class="string">&quot;路径&quot;</span>,</span><br><span class="line">    <span class="string">&quot;aaa&quot;</span>:<span class="string">&quot;我是自定义属性&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>获取属性<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;img&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;src&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>removeAttr()</p><ul><li>移除属性<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除单个属性</span></span><br><span class="line">$(<span class="string">&quot;img&quot;</span>).<span class="title function_">removeAttr</span>(<span class="string">&quot;src&quot;</span>)</span><br><span class="line"><span class="comment">//删除多个属性</span></span><br><span class="line">$(<span class="string">&quot;img&quot;</span>).<span class="title function_">removeAttr</span>(<span class="string">&quot;src aaa bbb&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>prop()操作布尔类型属性</p><ul><li><p>类似checked这样的属性在元素身上表示选择，没有表示没有选中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#ipt&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;checked&quot;</span>)<span class="comment">//无论选择还是没选择都是undefined</span></span><br></pre></td></tr></table></figure><p>! 注意在jQuery1.6之后checked、selectd、disabled这类Boolean类型属性 不能用attr()方法 只能用prop()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#ipt&quot;</span>).<span class="title function_">prop</span>(<span class="string">&quot;checked&quot;</span>) <span class="comment">//返回布尔值</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="jQuery尺寸和位置操作"><a href="#jQuery尺寸和位置操作" class="headerlink" title="jQuery尺寸和位置操作"></a>jQuery尺寸和位置操作</h2><h3 id="windth方法height方法"><a href="#windth方法height方法" class="headerlink" title="windth方法height方法"></a>windth方法height方法</h3><ul><li>设置或者获取高度，不包括内边距、边框和外边距</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 带参数表示设置高度</span></span><br><span class="line">$(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">height</span>(<span class="number">200</span>);</span><br><span class="line"><span class="comment">// 不带参数获取高度</span></span><br><span class="line">$(<span class="string">&quot;img&#x27;).height();</span></span><br></pre></td></tr></table></figure><ul><li>获取网页的可视区宽高</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取可视区宽度</span></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">width</span>();</span><br><span class="line"><span class="comment">// 获取可视区高度</span></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">height</span>();</span><br></pre></td></tr></table></figure><h3 id="innerWidth-innerHeight-outerWidth-outerHeight"><a href="#innerWidth-innerHeight-outerWidth-outerHeight" class="headerlink" title="innerWidth/innerHeight/outerWidth/outerHeight"></a>innerWidth/innerHeight/outerWidth/outerHeight</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">innerWidth</span>()/<span class="title function_">innerHeight</span>()方法返回元素的宽度/高度( 包括内边距)</span><br><span class="line"><span class="title function_">outerwidth</span>()/<span class="title function_">outerHeight</span>() 方法返回元素的宽度/高度(包括内边距和边框)</span><br><span class="line"><span class="title function_">outerWidth</span>(<span class="literal">true</span>)/<span class="title function_">outerHeight</span>(<span class="literal">true</span>) 方法返元素的宽度/高度(包括内边距、边框和外边距)</span><br></pre></td></tr></table></figure><h3 id="offset方法与position方法"><a href="#offset方法与position方法" class="headerlink" title="offset方法与position方法"></a>offset方法与position方法</h3><ul><li>offset方法获取元素距离document的位置，position方法获取的是元素距离有定位的父元素(offsetParent)的位置。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取元素距离document的位置,返回值为对象:&#123;left:108，top:100)</span></span><br><span class="line">$(selector).<span class="title function_">offset</span>();</span><br><span class="line"><span class="comment">//获取相对于其最近的有定位的父元素的位置</span></span><br><span class="line">$(selector).<span class="title function_">position</span>();</span><br></pre></td></tr></table></figure><h3 id="scrollTop与scrollLeft"><a href="#scrollTop与scrollLeft" class="headerlink" title="scrollTop与scrollLeft"></a>scrollTop与scrollLeft</h3><ul><li>设置或者获取垂直滚动条的位置</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取页面被卷曲的高度</span></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>();</span><br><span class="line"><span class="comment">// 获取页面被卷曲的宽度</span></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scrollLeft</span>();</span><br><span class="line"><span class="comment">// 设置页面被卷曲的高度</span></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>(<span class="number">10</span>);</span><br><span class="line"><span class="comment">// 设置页面卷曲的宽度</span></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scrollLeft</span>(<span class="number">60</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>节点操作</title>
      <link href="/2019/10/06/jquery/%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/10/06/jquery/%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h3><ul><li>html()</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取内容：不写参数</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">html</span>()</span><br><span class="line"><span class="comment">//设置内容:添加参数</span></span><br><span class="line"><span class="comment">//会把原来的内容覆盖</span></span><br><span class="line"><span class="comment">//可以识别标签</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;我是内容&lt;a&gt;百度一下&lt;/a&gt;&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>$()</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//能创建内容 但创建的内容只存在内存中 如果要显示需要追加</span></span><br><span class="line"><span class="keyword">var</span> $link=$(<span class="string">&quot;&lt;a&gt;我是a标签&lt;/a&gt;&quot;</span>)</span><br><span class="line"><span class="comment">//追加</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">append</span>($link)</span><br></pre></td></tr></table></figure><pre><code>###     添加节点</code></pre><ul><li>append()<ul><li>在元素内最后插入</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父节点.append(子节点)</span></span><br><span class="line"><span class="keyword">var</span> $link=$(<span class="string">&quot;&lt;a&gt;我是a标签&lt;/a&gt;&quot;</span>)</span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">append</span>($link)</span><br><span class="line"><span class="comment">//存在页面的元素会被剪切出去</span></span><br><span class="line"><span class="keyword">var</span> $link1=$(<span class="string">&quot;#link1&quot;</span>)</span><br><span class="line">$(<span class="string">&quot;#ul&quot;</span>).<span class="title function_">apend</span>($link1)</span><br></pre></td></tr></table></figure><ul><li>prepend()<ul><li>在元素内最前面插入</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父节点.prepend(子节点)</span></span><br><span class="line"><span class="keyword">var</span> $link=$(<span class="string">&quot;&lt;a&gt;我是a标签&lt;/a&gt;&quot;</span>)</span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">prepend</span>($link)</span><br><span class="line"><span class="comment">//存在页面的元素会被剪切出去</span></span><br><span class="line"><span class="keyword">var</span> $link1=$(<span class="string">&quot;#link1&quot;</span>)</span><br><span class="line">$(<span class="string">&quot;#ul&quot;</span>).<span class="title function_">prepend</span>($link1)</span><br></pre></td></tr></table></figure><ul><li>before()<ul><li>兄弟元素添加—添加到元素前面</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//元素A.before(元素B) 把元素B插入到了元素A前面</span></span><br><span class="line"><span class="keyword">var</span> $link=$(<span class="string">&quot;&lt;a&gt;我是a标签&lt;/a&gt;&quot;</span>)</span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">before</span>($link)</span><br></pre></td></tr></table></figure><ul><li>after()<ul><li>兄弟元素添加—添加到元素后面</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//元素A.before(元素B) 把元素B插入到了元素A后面</span></span><br><span class="line"><span class="keyword">var</span> $link=$(<span class="string">&quot;&lt;a&gt;我是a标签&lt;/a&gt;&quot;</span>)</span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">after</span>($link)</span><br></pre></td></tr></table></figure><ul><li>appendTo()<ul><li>子元素向父元素插入—出现在父元素内的最后</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> $link=$(<span class="string">&quot;&lt;a&gt;我是a标签&lt;/a&gt;&quot;</span>)</span><br><span class="line">$link.<span class="title function_">appendTo</span>($(<span class="string">&quot;#ul1&quot;</span>))</span><br></pre></td></tr></table></figure><h3 id="清空节点"><a href="#清空节点" class="headerlink" title="清空节点"></a>清空节点</h3><ul><li><p>html()</p><ul><li>不推荐，有可能造成内存泄漏，不安全</li></ul></li><li><p>empty()</p><ul><li>隐式迭代移除元素 不仅删除了元素 还移除了事件</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$obj.<span class="title function_">empty</span>()</span><br></pre></td></tr></table></figure><p>!注意：只是清空了内容 但是元素还在</p><h3 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h3><ul><li>remove()<ul><li>​    元素自杀 本质还是找到父元素 执行removeChild()方法</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$obj.<span class="title function_">remove</span>()</span><br></pre></td></tr></table></figure><h3 id="克隆节点"><a href="#克隆节点" class="headerlink" title="克隆节点"></a>克隆节点</h3><ul><li>clone()</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只存在内存中 如果要显示需要追加</span></span><br><span class="line"><span class="comment">//clone()有参数 布尔值 不管是true还是false 都会克隆到后代元素</span></span><br><span class="line"><span class="comment">//参数如果是true会把事件一起克隆 false不会 默认是false</span></span><br><span class="line"><span class="keyword">var</span> $yuan=$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">clone</span>()</span><br></pre></td></tr></table></figure><h3 id="获取表单元素的值"><a href="#获取表单元素的值" class="headerlink" title="获取表单元素的值"></a>获取表单元素的值</h3><ul><li>val()</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不写参数是获取</span></span><br><span class="line">$(<span class="string">&quot;#text&quot;</span>).<span class="title function_">val</span>()</span><br><span class="line"><span class="comment">//写参数是赋值</span></span><br><span class="line">$(<span class="string">&quot;#text&quot;</span>).<span class="title function_">val</span>(”我是内容“)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>操作类、动画</title>
      <link href="/2019/10/05/jquery/%E7%B1%BB%E3%80%81%E5%8A%A8%E7%94%BB/"/>
      <url>/2019/10/05/jquery/%E7%B1%BB%E3%80%81%E5%8A%A8%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="class操作"><a href="#class操作" class="headerlink" title="class操作"></a>class操作</h2><ul><li>添加类</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(#div1).<span class="title function_">addclass</span>(<span class="string">&quot;funtSize30&quot;</span>)<span class="comment">//添加一个类</span></span><br><span class="line">$(#div1).<span class="title function_">addclass</span>(<span class="string">&quot;funtSize30  wuaaa&quot;</span>)<span class="comment">//添加多个类</span></span><br></pre></td></tr></table></figure><ul><li>移除类</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">removeClass</span>(<span class="string">&quot;funtSize30&quot;</span>)<span class="comment">//删除一个类</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">removeClass</span>(<span class="string">&quot;funtSize30  wuaaa&quot;</span>)<span class="comment">//删除多个类</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">addclass</span>()<span class="comment">//删除所有类</span></span><br></pre></td></tr></table></figure><ul><li>判断类</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断一个元素有没有某个类 返回布尔值</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">hasclass</span>(<span class="string">&quot;funtSize30&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>切换类</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果某个元素有某个类就移除这个类，如果元素没有这个类就添加这个类</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">toggleclass</span>(<span class="string">&quot;funtSize30&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="jQuery动画"><a href="#jQuery动画" class="headerlink" title="jQuery动画"></a>jQuery动画</h2><ul><li>jQuery提供了三组基本动画这些动画都是标准的，有规律的效果，jQuery还提供了自定义动画的功能</li></ul><h3 id="三组基本动画"><a href="#三组基本动画" class="headerlink" title="三组基本动画"></a>三组基本动画</h3><ul><li>显示(show)与隐藏(hide)是一组动画</li><li>滑入(slideDown)与滑出(slideUp)与切换(slideToggle)，效果与卷帘门类似</li><li>淡入(fadeIn)与淡出(fadeOut)与切换(fadeToggle)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$obj.方法(speed,callback)</span><br><span class="line"><span class="comment">//seed(可选)：动画执行时间</span></span><br><span class="line"><span class="comment">//不传值没有动画效果</span></span><br><span class="line"><span class="comment">//毫秒数，动画执行的时间</span></span><br><span class="line"><span class="comment">//字符串，slow(600) normal(400) fast(200) 如果传入其他字符串均为normal</span></span><br></pre></td></tr></table></figure><h3 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h3><ul><li>animate()</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//参数1：必选的 对象 代表的需要做动画的属性</span></span><br><span class="line"><span class="comment">//参数2：可选的 代表执行动画的时长</span></span><br><span class="line"><span class="comment">//参数3：可选的 easing代表缓动还是匀速  linear(匀速) swing(缓动) 默认缓动</span></span><br><span class="line"><span class="comment">//参数4：动画执行完毕后的回调函数</span></span><br><span class="line">$obj.<span class="title function_">animate</span>(</span><br><span class="line">    &#123;<span class="attr">left</span>:<span class="number">800</span>&#125;,<span class="comment">//参数1</span></span><br><span class="line">    <span class="number">2000</span>,<span class="comment">//参数2</span></span><br><span class="line">    <span class="string">&quot;linear&quot;</span>,<span class="comment">//参数3</span></span><br><span class="line">    <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;执行完了&quot;</span>)&#125;<span class="comment">//参数4</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="动画队列与停止动画"><a href="#动画队列与停止动画" class="headerlink" title="动画队列与停止动画"></a>动画队列与停止动画</h3><ul><li>在同一个元素上执行多个动画，那么对于这个动画来说，后面的动画会被放到动画队列中，等前面的动画执行完成了才会执行</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//stop停止动画</span></span><br><span class="line">$obj.<span class="title function_">stop</span>(clearQueue,jumptoEnd)</span><br><span class="line"><span class="comment">//参数1：是否清除队列 参数类型true false </span></span><br><span class="line"><span class="comment">//参数2：是否跳转到最终效果 参数类型true false</span></span><br><span class="line"><span class="comment">//如果不写参数默认就是两个false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置、获取文本内容text()</title>
      <link href="/2019/10/04/jquery/text()%E6%96%B9%E6%B3%95%E3%80%81css()%E6%96%B9%E6%B3%95/"/>
      <url>/2019/10/04/jquery/text()%E6%96%B9%E6%B3%95%E3%80%81css()%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="设置、获取文本内容text"><a href="#设置、获取文本内容text" class="headerlink" title="设置、获取文本内容text()"></a>设置、获取文本内容text()</h2><h3 id="text不填参数"><a href="#text不填参数" class="headerlink" title="text不填参数"></a>text不填参数</h3><ul><li>会获取到标签中所有的文本包括后代元素</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#getBtn&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="comment">//获取id为div1的文本</span></span><br><span class="line">            <span class="comment">//会获取到标签中所有的文本包括后代元素的文本</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&#x27;#div1&#x27;</span>).<span class="title function_">text</span>());</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>包含多个dom元素的jQuery对象，通过text()，会把所有dom元素的文本获取到</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#getBtn&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="comment">//获取div</span></span><br><span class="line">            <span class="comment">//包含多个dom元素的jQuery对象，通过text()，会把所有dom元素的文本获取到</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">text</span>());</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="填入参数"><a href="#填入参数" class="headerlink" title="填入参数"></a>填入参数</h3><ul><li>设置文本会覆盖掉它原来的文本</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#setBtn&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">//给id为div1的标签设置文本</span></span><br><span class="line">        $(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;我是文本&quot;</span>)</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><ul><li>如果这个文本中包含标签也是不会解析出来的</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#setBtn&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">//给id为div1的标签设置文本</span></span><br><span class="line">        $(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">text</span>(<span class="string">&#x27;我是文本&lt;a&gt;我是链接&lt;/a&gt;&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>包含多个dom元素的jQuery对象，通过text()，会把所有dom元素的文本都设置上</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#setBtn&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="string">&quot;div&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;我是文本&quot;</span>)<span class="comment">//隐式迭代</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="获取、设置样式css"><a href="#获取、设置样式css" class="headerlink" title="获取、设置样式css()"></a>获取、设置样式css()</h2><ul><li>获取</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(元素).<span class="title function_">css</span>(属性名)</span><br></pre></td></tr></table></figure><p>! 注意:获取多个元素时只能获取第一个</p><ul><li>设置样式<ul><li>设置单样式<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(元素).<span class="title function_">css</span>(属性名,值)</span><br></pre></td></tr></table></figure></li><li>设值多样式<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(元素).<span class="title function_">css</span>(&#123;</span><br><span class="line">  属性名:值</span><br><span class="line">  <span class="string">&quot;属性名&quot;</span>:值</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>! 注意：可以给多个元素设置 隐式迭代</p>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>选择器、过滤器</title>
      <link href="/2019/10/04/jquery/%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>/2019/10/04/jquery/%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h3 id="jQuery基本选择器"><a href="#jQuery基本选择器" class="headerlink" title="jQuery基本选择器"></a>jQuery基本选择器</h3><table><thead><tr><th>名称</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>ID选择器</td><td>$(“#id”)</td><td>获取指定ID元素</td></tr><tr><td>类选择器</td><td>$(“#class”)</td><td>获取同一类class元素</td></tr><tr><td>标签选择器</td><td>$(“div”)</td><td>获取同一类标签元素</td></tr><tr><td>并集选择器</td><td>$(“div,p,li”)</td><td>用 , 隔开，只要符合条件即可</td></tr><tr><td>交集选择器</td><td>$(“div.redclass”)</td><td>获取class为redclass的div元素</td></tr></tbody></table><ul><li>总结：和css选择器一样</li></ul><h3 id="jQuery层级选择器"><a href="#jQuery层级选择器" class="headerlink" title="jQuery层级选择器"></a>jQuery层级选择器</h3><table><thead><tr><th>名称</th><th>用法</th><th align="left">描述</th></tr></thead><tbody><tr><td>子选择器</td><td>$(“ul&gt;li”)</td><td align="left">获取子元素  注意：不会获取孙子层次的元素</td></tr><tr><td>后代选择器</td><td>$(“ul li”)</td><td align="left">使用空格，代表后代选择器，获取ul元素下所有的li元素，包括孙子元等</td></tr></tbody></table><h3 id="jQuery过滤器"><a href="#jQuery过滤器" class="headerlink" title="jQuery过滤器"></a>jQuery过滤器</h3><table><thead><tr><th>名称</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>:eq(index)</td><td>$(“li:eq(2)”).css(“color”,’red’);</td><td>获取到的li元素中，选择所引号为2的元素，索引号index从0开始</td></tr><tr><td>:odd</td><td>$(“li:odd”).css(“color”,’red’);</td><td>获取到的li元素中，索引为奇数的元素</td></tr><tr><td>:even</td><td>$(“li:even”).css(“color”,’red’);</td><td>获取到的li元素中，索引为偶数的元素</td></tr></tbody></table><h3 id="jQuery筛选过滤器的方法"><a href="#jQuery筛选过滤器的方法" class="headerlink" title="jQuery筛选过滤器的方法"></a>jQuery筛选过滤器的方法</h3><ul><li>筛选选择器的功能与过滤选择器有点类似，但是用法不一样，筛选选择器主要是方法</li></ul><table><thead><tr><th>名称</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>children(selector)</td><td>$(ul’).children(li)</td><td>相当于$(ul-li)，子类选择器</td></tr><tr><td>find(selector)</td><td>$(ul).find(li’);</td><td>相当于$(ulli),后代选择器</td></tr><tr><td>siblings(selector)</td><td>$(#first’).siblings(li’);</td><td>查找兄弟节点，不包括自己本身。</td></tr><tr><td>parent()</td><td>$(#first’).parent():</td><td>查找父亲</td></tr><tr><td>eq(index)</td><td>$(li’).eq(2);</td><td>相当于$(li:eq(2)),index从0开始</td></tr><tr><td>next()</td><td>$(li).next()</td><td>找下一个兄弟</td></tr><tr><td>prev()</td><td>$(li’).prev0)</td><td>找上一次兄弟</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery</title>
      <link href="/2019/10/03/jquery/JQuery/"/>
      <url>/2019/10/03/jquery/JQuery/</url>
      
        <content type="html"><![CDATA[<h2 id="jQuery是什么"><a href="#jQuery是什么" class="headerlink" title="jQuery是什么"></a>jQuery是什么</h2><p>jQuery是一个快速、小巧目功能丰富的JavaScript库，它使HTML文档的遍历和操作、事件处理、动画和Ajax等操作变得更加简单，并提供了一个易于使用的AP1，可以跨多种浏览器工作。结合了多功能性和可扩展性，jQuery改变了数百万人编写JavaScript的方式</p><h2 id="jQuery有什么优势与原生js的区别"><a href="#jQuery有什么优势与原生js的区别" class="headerlink" title="jQuery有什么优势与原生js的区别"></a>jQuery有什么优势与原生js的区别</h2><h3 id="分析一下，元素js的缺点"><a href="#分析一下，元素js的缺点" class="headerlink" title="分析一下，元素js的缺点:"></a>分析一下，元素js的缺点:</h3><ul><li>不能添加多个入口函数 (window.onload) ,如果添加了多个，后面的会把前面的给覆盖</li><li>原生js的api名字都太长太难记。</li><li>原生js有的时候代码冗余。</li><li>原生js中有些属性或者方法，有浏览器兼容问题。</li><li>原生is容错率比较低，前面的代码出了问题，后面的代码执行不了</li></ul><h3 id="jQuery的优势"><a href="#jQuery的优势" class="headerlink" title="jQuery的优势"></a>jQuery的优势</h3><ul><li>是可以写多个入口函数的。</li><li>jQuery的api名字都容易记忆</li><li>jQuery代码简洁 (隐式迭代)</li><li>jQuery帮我们解决了浏览器兼容问题。</li><li>容错率较高，前面的代码出来了问题，后面的代码不受影响</li></ul><h2 id="jQuery入口函数"><a href="#jQuery入口函数" class="headerlink" title="jQuery入口函数"></a>jQuery入口函数</h2><h3 id="jQuery的两种写法"><a href="#jQuery的两种写法" class="headerlink" title="jQuery的两种写法"></a>jQuery的两种写法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><h3 id="jQuery入口函数和window-onload入口函数的区别"><a href="#jQuery入口函数和window-onload入口函数的区别" class="headerlink" title="jQuery入口函数和window.onload入口函数的区别"></a>jQuery入口函数和window.onload入口函数的区别</h3><ul><li>window.onload入口函数不能写多个，但是jQuery的入口函数是可以写多个的</li><li>执行时间不同jQuery入口函数要快于window.onload</li><li>jQuery入口函数要等待页面上dom树加载完成后执行 </li><li>window.onload要等待页面上的所有资源(dom树/外部css/js链接,图片)都加载完毕后执行</li></ul><h2 id="函数"><a href="#函数" class="headerlink" title="$函数"></a>$函数</h2><h3 id="jQuery文件的结构"><a href="#jQuery文件的结构" class="headerlink" title="jQuery文件的结构"></a>jQuery文件的结构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">jQuery</span>=<span class="variable language_">window</span>.<span class="property">$</span>=jQuert</span><br><span class="line">&#125;())</span><br></pre></td></tr></table></figure><p>它其实是一个自执行函数</p><ul><li>引入一个js文件是会执行这个js文件中的代码的</li><li>jQuery文件是一个自执行的函数</li><li>这个自执行函数就是给window对象添加一个jQuery属性和$属性</li><li>$和jQuery是等价的，是一个函数</li><li>$是一个函数，参数传递不同效果也不同<ul><li>如果传递的参数是一个匿名函数—入口函数</li><li>如果参数传递的是一个字符串—选择器 / 创建一个标签</li><li>如果参数是一个dom对象，那他就会把dom对象转换为jQuery对象</li></ul></li></ul><h2 id="DOM对象和jQuery对象"><a href="#DOM对象和jQuery对象" class="headerlink" title="DOM对象和jQuery对象"></a>DOM对象和jQuery对象</h2><h3 id="DOM对象"><a href="#DOM对象" class="headerlink" title="DOM对象"></a>DOM对象</h3><p>原生js选择器获取的对象 </p><p>特点：只能调用dom方法中的属性，不能调用jQuery的属性和方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div1=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;one&quot;</span>)</span><br><span class="line">div1.<span class="property">style</span>.<span class="property">background</span>=<span class="string">&#x27;red&#x27;</span><span class="comment">//dom对象是可以获取dom的属性或者方法</span></span><br><span class="line">div1.<span class="title function_">css</span>(<span class="string">&quot;background&quot;</span>,<span class="string">&#x27;green&#x27;</span>)<span class="comment">//报错 Uncaught TypeError: div1.css is not a function</span></span><br></pre></td></tr></table></figure><h3 id="jQuery对象"><a href="#jQuery对象" class="headerlink" title="jQuery对象"></a>jQuery对象</h3><p>​利用jQuery选择器获取到的对象</p><p>​特点：只能调用jQuery中的方法或属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> $div1=$(<span class="string">&#x27;#two&#x27;</span>)</span><br><span class="line">$div1.<span class="title function_">css</span>(<span class="string">&quot;background&quot;</span>,<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">$div1.<span class="property">style</span>.<span class="property">background</span>=<span class="string">&#x27;red&#x27;</span><span class="comment">//报错ncaught TypeError: Cannot set properties of undefined</span></span><br></pre></td></tr></table></figure><h3 id="DOM对象与jQuery对象之间的转换"><a href="#DOM对象与jQuery对象之间的转换" class="headerlink" title="DOM对象与jQuery对象之间的转换"></a>DOM对象与jQuery对象之间的转换</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable constant_">DOM</span>对象)<span class="comment">//du,对象转jQuery对象</span></span><br><span class="line"><span class="keyword">var</span> div1=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;one&quot;</span>)</span><br><span class="line">$(div1)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//jQuery对象转DOM对象</span><br><span class="line">//下标获取</span><br><span class="line">var $div=$(&#x27;div&#x27;)</span><br><span class="line">var div1=$div[0]</span><br><span class="line">console.log(div1)</span><br><span class="line">//jQuery方法 get()</span><br><span class="line">var div2= $div.get(1)</span><br><span class="line">console.log(div2)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>语义化标签</title>
      <link href="/2019/09/28/html/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE/"/>
      <url>/2019/09/28/html/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h1><ul><li>正确的标签做正确的事情！</li><li>HTML语义化就是让页面的内容结构化，便于对浏览器、搜索引擎解析</li><li>在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的。</li><li>搜索引擎的爬虫依赖于标记来确定上下文和各个关键字的权重，利于 SEO</li><li>使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解</li></ul><h2 id="常见的标签"><a href="#常见的标签" class="headerlink" title="常见的标签"></a>常见的标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span>页眉通常包括网站标志、主导航、全站链接以及搜索框</span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span><span class="tag">&lt;/<span class="name">nav</span>&gt;</span>标记导航，仅对文档中重要的链接群使用</span><br><span class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span><span class="tag">&lt;/<span class="name">main</span>&gt;</span>页面主要内容，一个页面只能使用一次</span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span><span class="tag">&lt;/<span class="name">article</span>&gt;</span>定义外部的内容，其中的内容独立于文档的其余部分</span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span>定义文档中的节。比如章节、页眉、页脚或文档中的其他部分</span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span>定义其所处内容之外的内容。如侧栏、文章链接、广告、相关产品列表等</span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span>页脚，只有当父级是body时，才是整个页面的页脚</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>无序列表     </span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>有序列表    </span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">small</span>&gt;</span>呈现小号字体效果，指定细则，输入免责声明、注解、署名、版权</span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span>将其中的文本表示为强调的内容，表现为斜体</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/2019/09/27/html/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE%20copy/"/>
      <url>/2019/09/27/html/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE%20copy/</url>
      
        <content type="html"><![CDATA[<h2 id="html是什么"><a href="#html是什么" class="headerlink" title="html是什么"></a>html是什么</h2><ul><li>HTML的全称为超文本标记语言，是一种标记语言。</li><li>HTML文本是由HTML命令组成的描述性文本，HTML命令可以说明文字，图形、动画、声音、表格、链接等</li></ul>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
